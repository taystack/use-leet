{"version":3,"file":"index.es.js","sources":["../src/config.js","../src/getLeetValue.js","../src/useGeneratedLeet.js","../src/index.js"],"sourcesContent":["export const defaultLeetMap = {\n  a: \"4\",\n  b: \"b\",\n  c: \"c\",\n  d: \"d\",\n  e: \"3\",\n  f: \"f\",\n  g: \"g\",\n  h: \"h\",\n  i: \"i\",\n  j: \"j\",\n  k: \"k\",\n  l: \"1\",\n  m: \"m\",\n  n: \"n\",\n  o: \"0\",\n  p: \"p\",\n  q: \"q\",\n  r: \"r\",\n  s: \"5\",\n  t: \"7\",\n  u: \"u\",\n  v: \"v\",\n  w: \"w\",\n  x: \"x\",\n  y: \"y\",\n  z: \"z\",\n  \"1\": \"L\",\n  \"2\": \"Z\",\n  \"3\": \"E\",\n  \"4\": \"A\",\n  \"5\": \"S\",\n  \"6\": \"b\",\n  \"7\": \"T\",\n  \"8\": \"B\",\n  \"9\": \"g\",\n  \"0\": \"o\",\n  \"!\": \"zorz\",\n\n  // Preserved items,\n  \"…\": \"ness\",\n};\n\n\n/*\n\nSome characters that may be safe for pointing at preserved text.\n…¬˚∆©ßåœ∑´®¥¨ˆøπ“‘’”«»≠–ºª•¶§∞¢£™¡`Ω≈ç√˜µ≤≥÷\n*/\n\n\nexport default {};\n","import { defaultLeetMap } from \"./config\";\n\n\n// Return the mapped value if it exists.\n// otherwise return the letter.\nexport default function getLeetValue(letter, leetMap = defaultLeetMap) {\n  let leetValue = leetMap[letter.toLowerCase()];\n  return leetValue ? leetValue : letter;\n}\n","import { useMemo } from \"react\";\nimport { defaultLeetMap } from \"./config\";\nimport getLeetValue from \"./getLeetValue\";\n\n\nexport default function useGeneratedLeet( value, leetMap = defaultLeetMap ) {\n  // Memoize the generated leet when either VALUE or LEET_MAP changes\n  return useMemo(() => {\n\n    // Get some words out that transpile to characters\n    let subbedValue = value;\n\n    // Point at 'ness' with a safe-ish character.\n    subbedValue = subbedValue.replace(/ness/gi, \"…\");\n\n    // own -> pwn\n    subbedValue = subbedValue.replace(/own/gi, \"pwn\");\n\n    // and, banned, sandbox -> &, b&, &box\n    subbedValue = subbedValue.replace(/and|anned/gi, \"&\");\n\n    // replace past participles (ed) WORDed -> WORDd\n    subbedValue = subbedValue.replace(/ed\\b/gi, \"d\");\n\n    // dude -> dood, dudes -> doodz\n    subbedValue = subbedValue.replace(/dudes/gi, \"doodz\");\n    subbedValue = subbedValue.replace(/dude/gi, \"dood\");\n\n    // fool -> foo\n    subbedValue = subbedValue.replace(/fool/gi, \"foo\");\n\n    // Some people need help with 'you're a' from 'your a'. I'm a nice guy\n    subbedValue = subbedValue.replace(/you\\sare\\sa|you\\'re\\sa|your\\sa/gi, \"you a\");\n\n    // you -> joo\n    subbedValue = subbedValue.replace(/\\byou/gi, \"joo\");\n\n    // my -> mah\n    subbedValue = subbedValue.replace(/\\bmy\\b/gi, \"mah\");\n\n    // [...greetings] -> jo\n    subbedValue = subbedValue.replace(/yo|hi|hey|hello|sup|what\\'s\\sup|what\\sis\\sup/gi, \"jo\");\n\n    // hacks -> hax\n    subbedValue = subbedValue.replace(/hacks/gi, \"hax\");\n\n    // Generate the gibberish...\n    const generatedLeet = subbedValue.split(\"\").map(letter => getLeetValue(letter, leetMap)).join(\"\");\n\n    // Memoize the generated leet\n    return generatedLeet;\n\n  }, [value, leetMap]);\n}\n","import { useState, useMemo } from \"react\";\nimport { defaultLeetMap } from \"./config\";\nimport useGeneratedLeet from \"./useGeneratedLeet\";\n\n\nexport default function useLeet( defaultValue = \"\", custom = {} ) {\n\n  // Store the plain text stuff\n  const [ value, setValue ] = useState(defaultValue);\n\n  // Memoize the map used for leet-ifying\n  const leetMap = useMemo(() => {\n    return {\n      ...defaultLeetMap,\n      ...custom,\n    };\n  }, [custom]);\n\n  // Memoize the generated leet\n  const leet = useGeneratedLeet(value, leetMap);\n\n  return [ value, setValue, leet ];\n}\n"],"names":["defaultLeetMap","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","getLeetValue","letter","leetMap","leetValue","toLowerCase","useGeneratedLeet","value","useMemo","subbedValue","replace","generatedLeet","split","map","join","useLeet","defaultValue","custom","useState","setValue","leet"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,cAAc,GAAG;AAC5BC,EAAAA,CAAC,EAAE,GADyB;AAE5BC,EAAAA,CAAC,EAAE,GAFyB;AAG5BC,EAAAA,CAAC,EAAE,GAHyB;AAI5BC,EAAAA,CAAC,EAAE,GAJyB;AAK5BC,EAAAA,CAAC,EAAE,GALyB;AAM5BC,EAAAA,CAAC,EAAE,GANyB;AAO5BC,EAAAA,CAAC,EAAE,GAPyB;AAQ5BC,EAAAA,CAAC,EAAE,GARyB;AAS5BC,EAAAA,CAAC,EAAE,GATyB;AAU5BC,EAAAA,CAAC,EAAE,GAVyB;AAW5BC,EAAAA,CAAC,EAAE,GAXyB;AAY5BC,EAAAA,CAAC,EAAE,GAZyB;AAa5BC,EAAAA,CAAC,EAAE,GAbyB;AAc5BC,EAAAA,CAAC,EAAE,GAdyB;AAe5BC,EAAAA,CAAC,EAAE,GAfyB;AAgB5BC,EAAAA,CAAC,EAAE,GAhByB;AAiB5BC,EAAAA,CAAC,EAAE,GAjByB;AAkB5BC,EAAAA,CAAC,EAAE,GAlByB;AAmB5BC,EAAAA,CAAC,EAAE,GAnByB;AAoB5BC,EAAAA,CAAC,EAAE,GApByB;AAqB5BC,EAAAA,CAAC,EAAE,GArByB;AAsB5BC,EAAAA,CAAC,EAAE,GAtByB;AAuB5BC,EAAAA,CAAC,EAAE,GAvByB;AAwB5BC,EAAAA,CAAC,EAAE,GAxByB;AAyB5BC,EAAAA,CAAC,EAAE,GAzByB;AA0B5BC,EAAAA,CAAC,EAAE,GA1ByB;AA2B5B,OAAK,GA3BuB;AA4B5B,OAAK,GA5BuB;AA6B5B,OAAK,GA7BuB;AA8B5B,OAAK,GA9BuB;AA+B5B,OAAK,GA/BuB;AAgC5B,OAAK,GAhCuB;AAiC5B,OAAK,GAjCuB;AAkC5B,OAAK,GAlCuB;AAmC5B,OAAK,GAnCuB;AAoC5B,OAAK,GApCuB;AAqC5B,OAAK,MArCuB;AAuC5B;AACA,OAAK;AAxCuB,CAAvB;;ACIP;;AACA,AAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAwD;AAAA,MAA1BC,OAA0B,uEAAhB7B,cAAgB;AACrE,MAAI8B,SAAS,GAAGD,OAAO,CAACD,MAAM,CAACG,WAAP,EAAD,CAAvB;AACA,SAAOD,SAAS,GAAGA,SAAH,GAAeF,MAA/B;AACD;;ACHc,SAASI,gBAAT,CAA2BC,KAA3B,EAA6D;AAAA,MAA3BJ,OAA2B,uEAAjB7B,cAAiB;AAC1E;AACA,SAAOkC,OAAO,CAAC,YAAM;AAEnB;AACA,QAAIC,WAAW,GAAGF,KAAlB,CAHmB;;AAMnBE,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,QAApB,EAA8B,GAA9B,CAAd,CANmB;;AASnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,OAApB,EAA6B,KAA7B,CAAd,CATmB;;AAYnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,aAApB,EAAmC,GAAnC,CAAd,CAZmB;;AAenBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,QAApB,EAA8B,GAA9B,CAAd,CAfmB;;AAkBnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,SAApB,EAA+B,OAA/B,CAAd;AACAD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,QAApB,EAA8B,MAA9B,CAAd,CAnBmB;;AAsBnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,QAApB,EAA8B,KAA9B,CAAd,CAtBmB;;AAyBnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,kCAApB,EAAwD,OAAxD,CAAd,CAzBmB;;AA4BnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,SAApB,EAA+B,KAA/B,CAAd,CA5BmB;;AA+BnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,UAApB,EAAgC,KAAhC,CAAd,CA/BmB;;AAkCnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,gDAApB,EAAsE,IAAtE,CAAd,CAlCmB;;AAqCnBD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,SAApB,EAA+B,KAA/B,CAAd,CArCmB;;AAwCnB,QAAMC,aAAa,GAAGF,WAAW,CAACG,KAAZ,CAAkB,EAAlB,EAAsBC,GAAtB,CAA0B,UAAAX,MAAM;AAAA,aAAID,YAAY,CAACC,MAAD,EAASC,OAAT,CAAhB;AAAA,KAAhC,EAAmEW,IAAnE,CAAwE,EAAxE,CAAtB,CAxCmB;;AA2CnB,WAAOH,aAAP;AAED,GA7Ca,EA6CX,CAACJ,KAAD,EAAQJ,OAAR,CA7CW,CAAd;AA8CD;;AChDc,SAASY,OAAT,GAAmD;AAAA,MAAjCC,YAAiC,uEAAlB,EAAkB;AAAA,MAAdC,MAAc,uEAAL,EAAK;;AAEhE;AAFgE,kBAGpCC,QAAQ,CAACF,YAAD,CAH4B;AAAA;AAAA,MAGxDT,KAHwD;AAAA,MAGjDY,QAHiD;;;AAMhE,MAAMhB,OAAO,GAAGK,OAAO,CAAC,YAAM;AAC5B,8BACKlC,cADL,MAEK2C,MAFL;AAID,GALsB,EAKpB,CAACA,MAAD,CALoB,CAAvB,CANgE;;AAchE,MAAMG,IAAI,GAAGd,gBAAgB,CAACC,KAAD,EAAQJ,OAAR,CAA7B;AAEA,SAAO,CAAEI,KAAF,EAASY,QAAT,EAAmBC,IAAnB,CAAP;AACD;;;;"}